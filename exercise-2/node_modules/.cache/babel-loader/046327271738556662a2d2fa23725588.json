{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-93c9a650\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"c-accordion__item\"\n};\nconst _hoisted_2 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" <accordion-item\\n        v-for=\\\"item in content\\\"\\n        :multiple=\\\"multiple\\\"\\n        :item=\\\"item\\\"\\n        :groupId=\\\"groupId\\\"\\n        :key=\\\"item.id\\\">\\n      </accordion-item>\\n      <div :id=\\\"groupId + '-' + item.id\\\" class=\\\"accordion-item\\\" :class=\\\"{'is-active': item.active}\\\">\\n        <dt class=\\\"accordion-item-title\\\">\\n            <button @click=\\\"toggle\\\" class=\\\"accordion-item-trigger\\\">\\n            <h4 class=\\\"accordion-item-title-text\\\">{{item.title}}</h4>\\n            <span class=\\\"accordion-item-trigger-icon\\\"></span>\\n            </button>\\n        </dt>\\n        <transition\\n            name=\\\"accordion-item\\\"\\n            @enter=\\\"startTransition\\\"\\n            @after-enter=\\\"endTransition\\\"\\n            @before-leave=\\\"startTransition\\\"\\n            @after-leave=\\\"endTransition\\\">\\n            <dd v-if=\\\"item.active\\\" class=\\\"accordion-item-details\\\">\\n            <div v-html=\\\"item.details\\\" class=\\\"accordion-item-details-inner\\\"></div>\\n            </dd>\\n        </transition>\\n        </div> \"), _createElementVNode(\"button\", {\n    class: _normalizeClass({\n      'isActive': $data.activeAccordion == _ctx.index\n    })\n  }, _toDisplayString($props.accordionItem.title), 3\n  /* TEXT, CLASS */\n  ), _createElementVNode(\"div\", {\n    class: _normalizeClass({\n      'isActive': $data.activeAccordion == _ctx.index\n    }),\n    innerHTML: $props.accordionItem.content\n  }, null, 10\n  /* CLASS, PROPS */\n  , _hoisted_2)]);\n}","map":{"version":3,"mappings":";;;;;EACOA,KAAK,EAAC;;;;uBAAXC,oBAgCM,KAhCN,cAgCM,CA9BFC,2iCA8BE,EAHJC,oBAA4F,QAA5F,EAA4F;IAAnFH,KAAK;MAAA,YAAgBI,yBAAmBC;IAAnC;EAA8E,CAA5F,mBAA6DC,qBAAcC,MAA3E,EAAgF;EAAA;EAAhF,CAGI,EAFJJ,oBACM,KADN,EACM;IADAH,KAAK;MAAA,YAAgBI,yBAAmBC;IAAnC,EACL;IADiDG,SAA8B,EAAtBF,qBAAcG;EACvE,CADN;;EAAA,aAEI,CAhCN","names":["class","_createElementBlock","_createCommentVNode","_createElementVNode","$data","_ctx","$props","title","innerHTML","content"],"sourceRoot":"","sources":["/Users/jeff/Desktop/Web Dev Projects/mindarc/exercise-2/src/components/accordion-component.vue"],"sourcesContent":["<template>\n  <div class=\"c-accordion__item\">\n\n      <!-- <accordion-item\n        v-for=\"item in content\"\n        :multiple=\"multiple\"\n        :item=\"item\"\n        :groupId=\"groupId\"\n        :key=\"item.id\">\n      </accordion-item>\n      <div :id=\"groupId + '-' + item.id\" class=\"accordion-item\" :class=\"{'is-active': item.active}\">\n        <dt class=\"accordion-item-title\">\n            <button @click=\"toggle\" class=\"accordion-item-trigger\">\n            <h4 class=\"accordion-item-title-text\">{{item.title}}</h4>\n            <span class=\"accordion-item-trigger-icon\"></span>\n            </button>\n        </dt>\n        <transition\n            name=\"accordion-item\"\n            @enter=\"startTransition\"\n            @after-enter=\"endTransition\"\n            @before-leave=\"startTransition\"\n            @after-leave=\"endTransition\">\n            <dd v-if=\"item.active\" class=\"accordion-item-details\">\n            <div v-html=\"item.details\" class=\"accordion-item-details-inner\"></div>\n            </dd>\n        </transition>\n        </div> -->\n\n\n    <button :class=\"{ 'isActive': activeAccordion == index }\">{{ accordionItem.title }}</button>\n    <div :class=\"{ 'isActive': activeAccordion == index }\" v-html=\"accordionItem.content\">\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'accordionComponent',\n    data(){\n      return {\n        activeAccordion: 0\n      }\n    },\n    props: {\n      accordionItem: {},\n    },\n\n    methods:{\n      setActiveTab(tab){\n        this.activeTab = tab.dataset.tabid;\n      }\n    }\n  }\n</script>\n\n<style scoped>\n    .c-accordion__item{\n        \n    }\n\n</style>\n"]},"metadata":{},"sourceType":"module"}